#!/bin/zsh
venv() {
    # activate virtualenv
    # :param path_: path to the virtual env
    # :param env:   name of the virtual env
    env="${1:="venv"}"
    path_="${2:="."}"
    venv="$path_/$env"
    activate="$venv/bin/activate"
    source "$activate"
}


notes() {
    # open new notes in a with a well organised /year/month/day/time.txt format
    # note: if note in the dirname of the notes path, a whole new path will be
    # created
    # :param path_ : path tp the notebook directory
    path_="${1:="."}"
    extension="${2:='md'}"
    dir_="notebook"
    subdirs="$(date +"%Y/%m/%d")"
    note="$(date +"%T").${extension}"
    fullpath="$path_/$dir_/$subdirs"
    mkdir -p "$fullpath"
    vim "$fullpath/$note"
}


venv_module() {
    if [[ "$VIRTUAL_ENV" == "" ]]
    then
        venv
    fi
}


gitstamp() {
    msg="${1:=""}"
    git commit -m "{\"$msg\": \"$(dt)\"}"
}

dtname() {
    # return a name in the following format
    # name.date:time.extension
    name="${1:=""}"
    extension="${2}"
    output="${name}.$(date +'%Y.%m.%d:%H.%M.%S')"
    if [ -z "$2" ]; then
        echo "${output}"
    else
        echo "${output}"."${extension}"
    fi
}

redir() {
    # redirect stdout of a command into a file with the `dtname` format. eg...
    # redir speedtest extension
    # > speedtest.date:time.extension
    cmd="$1"
    extension="$2"
    "$cmd" > $(dtname "$cmd" "$extension")
}

sign_prev() {
    commit=$1
    git rebase --exec 'git commit --amend --no-edit -n -S' -i "${commit:="HEAD^"}"
}

vimide() {
    rm -f "$HOME/.dotfiles/vim/vimrc" > /dev/null 2>&1
    ln -s "$HOME/.dotfiles/vim/rc/vim-ide" "$HOME/.dotfiles/vim/vimrc"
    /usr/bin/vim "$@"
}

vim() {
    rm -f "$HOME/.dotfiles/vim/vimrc" > /dev/null 2>&1
    ln -s "$HOME/.dotfiles/vim/rc/vimrc" "$HOME/.dotfiles/vim/vimrc"
    /usr/bin/vim "$@"
}
