#-----------------------------------------------------------------------------#
#                                 ZSH ALIASES                                 #
#-----------------------------------------------------------------------------#
alias edit='vim'
#alias apt='sudo apt'
#alias apt-get='sudo apt-get'
alias fullapt='sudo python3 ~/Documents/Programming/Python/fullapt/fullapt.py'

# 'mv' - but in rsync
alias rsync-mv='rsync -az --progress --remove-source-files'
# 'cp' - but in rsync
alias rsync-cp='rsync -az --progress'

# Terminal config files
alias zrc='edit ~/.zshrc'                           # edit .zshrc
alias srcrc='source ~/.zshrc'                      # load .zshrc
alias excz="exec zsh"                               # refresh shell
alias zthm="edit ~/.zsh/theme.list"                 # edit theme selection
alias plg="edit ~/.zsh/plugins.list"                # edit plugin selection
alias vrc="edit ~/.vimrc"                           # edit .vimrc
alias vthm="edit ~/.vim/themes.vim"
alias zalias="edit ~/.zsh/aliases"
alias vundles="edit ~/.vim/plugins.vim"
alias edship="edit ~/.zsh/conf/spaceship/spaceshiprc"

# Alias for manual backup to server with Borg
alias backup='sudo /etc/backup/borg.sh'

# Gnupg
alias gpge='gpg -e -r $USER'
alias gpgd="~/.local/bin/gpgargs.sh"

# tar
alias tgzc="~/.local/bin/tgzcargs.sh"
alias tgzx="tar -zxvf"

# venv
alias dvenv="deactivate"

# Alias's to modified commands
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -iv'
alias mkdir='mkdir -p'
alias ps='ps auxf'
alias ping='ping -c 3'
#alias apt-get='sudo apt-get'
alias svim='sudo vim'

#alias mx='chmod a+x'
alias 000='chmod -R 000'
alias 644='chmod -R 644'
alias 666='chmod -R 666'
alias 755='chmod -R 755'
alias 777='chmod -R 777'

# Search command line history
# alias h="history | grep "

# # Search running processes
alias p="ps aux | grep "
alias topcpu="/bin/ps -eo pcpu,pid,user,args | sort -k 1 -r | head -10"

# Search files in the current folder
alias f="find . | grep "

# Alias's to show disk space and space used in a folder
alias diskspace="du -S | sort -n -r |more"
alias folders='du -h --max-depth=1'
alias folderssort='find . -maxdepth 1 -type d -print0 | xargs -0 du -sk | sort -rn'
alias tree='tree -CAhF --dirsfirst'
alias treed='tree -CAFd'
alias mountedinfo='df -hT'



alias cls='colorls'


#-----------------------------------------------------------------------------#
#                                ARCHIVE                                      #
#-----------------------------------------------------------------------------#

# # cd into the old directory
# alias bd='cd "$OLDPWD"'

# # Remove a directory and all files
# alias rmd='/bin/rm  --recursive --force --verbose '

# # Alias's for multiple directory listing commands
# alias la='ls -Alh' # show hidden files
# alias ls='ls -aFh --color=always' # add colors and file type extensions
# alias lx='ls -lXBh' # sort by extension
# alias lk='ls -lSrh' # sort by size
# alias lc='ls -lcrh' # sort by change time
# alias lu='ls -lurh' # sort by access time
# alias lr='ls -lRh' # recursive ls
# alias lt='ls -ltrh' # sort by date
# alias lm='ls -alh |more' # pipe through 'more'
# alias lw='ls -xAh' # wide listing format
# alias ll='ls -Fls' # long listing format
# alias labc='ls -lap' #alphabetical sort
# alias lf="ls -l | egrep -v '^d'" # files only
# alias ldir="ls -l | egrep '^d'" # directories only

# # alias chmod commands
# # Count all files (recursively) in the current folder
# alias countfiles="for t in files links directories; do echo \`find . -type \${t:0:1} | wc -l\` \$t; done 2> /dev/null"

# To see if a command is aliased, a file, or a built-in command
# alias checkcommand="type -t"

# Show current network connections to the server
# alias ipview="netstat -anpl | grep :80 | awk {'print \$5'} | cut -d\":\" -f1 | sort | uniq -c | sort -n | sed -e 's/^ *//' -e 's/ *\$//'"

# # Show open ports
# alias openports='netstat -nape --inet'

# # Alias's for safe and forced reboots
# alias rebootsafe='sudo shutdown -r now'
# alias rebootforce='sudo shutdown -r -n now'

# # Alias's for archives
# alias mktar='tar -cvf'
# alias mkbz2='tar -cvjf'
# alias mkgz='tar -cvzf'
# alias untar='tar -xvf'
# alias unbz2='tar -xvjf'
# alias ungz='tar -xvzf'

# Show all logs in /var/log
# alias logs="sudo find /var/log -type f -exec file {} \; | grep 'text' | cut -d' ' -f1 | sed -e's/:$//g' | grep -v '[0-9]$' | xargs tail -f"

# SHA1
# alias sha1='openssl sha1'

# Extracts any archive(s) (if unp isn't installed)
# extract () {
# 	for archive in $*; do
# 		if [ -f $archive ] ; then
# 			case $archive in
# 				*.tar.bz2)   tar xvjf $archive    ;;
# 				*.tar.gz)    tar xvzf $archive    ;;
# 				*.bz2)       bunzip2 $archive     ;;
# 				*.rar)       rar x $archive       ;;
# 				*.gz)        gunzip $archive      ;;
# 				*.tar)       tar xvf $archive     ;;
# 				*.tbz2)      tar xvjf $archive    ;;
# 				*.tgz)       tar xvzf $archive    ;;
# 				*.zip)       unzip $archive       ;;
# 				*.Z)         uncompress $archive  ;;
# 				*.7z)        7z x $archive        ;;
# 				*)           echo "don't know how to extract '$archive'..." ;;
# 			esac
# 		else
# 			echo "'$archive' is not a valid file!"
# 		fi
# 	done
# }

# Searches for text in all files in the current folder
# ftext ()
# {
# 	# -i case-insensitive
# 	# -I ignore binary files
# 	# -H causes filename to be printed
# 	# -r recursive search
# 	# -n causes line number to be printed
# 	# optional: -F treat search term as a literal, not a regular expression
# 	# optional: -l only print filenames and not the matching lines ex. grep -irl "$1" *
# 	grep -iIHrn --color=always "$1" . | less -r
# }

# Copy file with a progress bar
# cpp()
# {
# 	set -e
# 	strace -q -ewrite cp -- "${1}" "${2}" 2>&1 \
# 	| awk '{
# 	count += $NF
# 	if (count % 10 == 0) {
# 		percent = count / total_size * 100
# 		printf "%3d%% [", percent
# 		for (i=0;i<=percent;i++)
# 			printf "="
# 			printf ">"
# 			for (i=percent;i<100;i++)
# 				printf " "
# 				printf "]\r"
# 			}
# 		}
# 	END { print "" }' total_size=$(stat -c '%s' "${1}") count=0
# }

# Copy and go to the directory
# cpg ()
# {
# 	if [ -d "$2" ];then
# 		cp $1 $2 && cd $2
# 	else
# 		cp $1 $2
# 	fi
# }

# Move and go to the directory
# mvg ()
# {
# 	if [ -d "$2" ];then
# 		mv $1 $2 && cd $2
# 	else
# 		mv $1 $2
# 	fi
# }

# # Create and go to the directory
# mkdirg ()
# {
# 	mkdir -p $1
# 	cd $1
# }

# Goes up a specified number of directories  (i.e. up 4)
# up ()
# {
# 	local d=""
# 	limit=$1
# 	for ((i=1 ; i <= limit ; i++))
# 		do
# 			d=$d/..
# 		done
# 	d=$(echo $d | sed 's/^\///')
# 	if [ -z "$d" ]; then
# 		d=..
# 	fi
# 	cd $d
# }

# IP address lookup
# alias whatismyip="whatsmyip"
# function whatsmyip ()
# {
# 	# Dumps a list of all IP addresses for every device
# 	# /sbin/ifconfig |grep -B1 "inet addr" |awk '{ if ( $1 == "inet" ) { print $2 } else if ( $2 == "Link" ) { printf "%s:" ,$1 } }' |awk -F: '{ print $1 ": " $3 }';

# Internal IP Lookup
# 	echo -n "Internal IP: " ; /sbin/ifconfig eth0 | grep "inet addr" | awk -F: '{print $2}' | awk '{print $1}'

# External IP Lookup
# 	echo -n "External IP: " ; wget http://smart-ip.net/myip -O - -q
# }


# alias ci="code-insiders"
# alias chrome='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome'
# alias canary='/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary'
#
# # Kill Chrome because it gets stuck sometimes
# alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"
#
# # Example aliases
# # alias zshconfig="mate ~/.zshrc"
# # alias ohmyzsh="mate ~/.oh-my-zsh"


#-----------------------------------------------------------------------------#
#                               ZSH FUNCTIONS                                 #
#-----------------------------------------------------------------------------#


# Make pyfiiles
# pyinit() {
#     cd python3 ~/Documents/Programming/Python/ || exit
#     cd PycharmProjects/pyinit/pyinit/pyinit.py || exit
# }
alias testjs='rm -rf ~/.pydex.json && cp ~/.pydex_tmp.json ~/.pydex.json'
nosu() {
    app="$1"
    sudo -u kali -H "$app"
}


# Print glyphs on system (need to be in the directory)
lsicons() {
    names="$1"
    pipe="$2"
    iogrep="$3"
    search="$4"
    cd "$HOME"/.opt/icons-in-terminal/ || exit
    ./print_icons.sh "$names" "$pipe" "$iogrep" "$search"
    cd -- || exit
}


# Check CPU usage
cpu() {
    a="'cpu ' /proc/stat | awk '{usage=(\$2+\$4)*100/(\$2+\$4+\$5)} } "
    b="END {print usage}' | awk '{printf(\"%.1f\n\", \$1)}'"
    grep "${a}${b}"
}


venv() {
    directory="$1"
    if [ -z "$1" ]; then
        directory='.'
    fi
    source "$directory"/venv/bin/activate
}

pydex() {
    opts="$1"
    args="$2"
    if [[ "$VIRTUAL_ENV" == "" ]]
    then
        source ~/Documents/Programming/Python/PycharmProjects/pydex/venv/bin/activate
    fi
    python3 ~/Documents/Programming/Python/PycharmProjects/pydex/pydex/__main__.py $opts $args
}

notes() {
    opts="$1"
    args="$2"
    /home/stephen/Documents/Programming/shell/quicknotes.sh $opts $args
}
