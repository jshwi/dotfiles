#!/bin/bash -
# shellcheck source=/dev/null

# --- ENV ---
ZSH="$HOME/.oh-my-zsh"
ZSH_CUSTOM="$ZSH/custom"
DOTFILES="$HOME/.dotfiles"
ZSH_BASE_DIR="$HOME/.zsh"
ZSHRC_CONFIG="$ZSH_BASE_DIR/zshrc.d"
ZSH_CACHE="$ZSH_BASE_DIR/.cache"
export ZSH
export ZSH_CUSTOM
export DOTFILES
export ZSH_BASE_DIR
export ZSHRC_CONFIG

# Create a cache folder if it isn't exists
if [ ! -d "$ZSH_CACHE" ]; then
    mkdir -p "$ZSH_CACHE"
fi

[ -f "${DOTFILES}/.env" ] && source "${DOTFILES}/.env"

# Define a custom file for compdump
ZSH_COMPDUMP="$ZSH_CACHE/zcompdump-$HOST-$ZSH_VERSION"
HISTFILE="$ZSH_CACHE/zsh_history"

# --- GLOBAL ---
_VIM="/usr/bin/vim"
LANG=en_AU.UTF-8


HISTSIZE='10000'
SAVEHIST="$HISTSIZE"
TERM="xterm-256color"
THEMES="$ZSHRC_CONFIG/themes"
PLUGINS="$ZSHRC_CONFIG/plugins"
FUNCTIONS="$ZSHRC_CONFIG/functions"
FUNCTIONS_TMP="$ZSHRC_CONFIG/tmp_functions"
FUNCTION_DIR="$ZSHRC_CONFIG/functions.d"
ALIASES="$ZSHRC_CONFIG/aliases"
LOCALHOME="$HOME/.local"
LOCALBIN="$LOCALHOME/bin"
DOTGEM="$HOME/.gem"
RUBYVERSION="2.7.0"
DOTRUBY="$DOTGEM/ruby/$RUBYVERSION"
RUBYBIN="$DOTRUBY/bin"
DOTFILES_LIB="$DOTFILES/lib"
export _VIM
export MANPATH
export PATH
export LANG
export SAVEHIST
export TERM
export DOTDIR
export THEMES
export PLUGINS
export FUNCTIONS
export ALIASES
export FUNCTION_DIR

# --- PATH ---
PATH="$PATH:$LOCALBIN"
PATH="$PATH:$RUBYBIN"
PATH="$PATH:$DOTFILES/bin"
export PATH

# --- PYTHONPATH ---
# PYTHONPATH="${PYTHONPATH}:$DOTFILES_LIB"
# export PYTHONPATH

# --- MANPATH ---
MANPATH="$MANPATH:/usr/share/man"
export MANPATH

# --- OH-MY-ZSH ---
CASE_SENSITIVE="false"
HYPHEN_INSENSITIVE="false"
DISABLE_AUTO_UPDATE="false"
DISABLE_UPDATE_PROMPT="false"
UPDATE_ZSH_DAYS=13
DISABLE_MAGIC_FUNCTIONS="false"
DISABLE_LS_COLORS="false"
DISABLE_AUTO_TITLE="false"
ENABLE_CORRECTION="true"
COMPLETION_WAITING_DOTS="true"
DISABLE_UNTRACKED_FILES_DIRTY="false"
HIST_STAMPS="dd/mm/yyyy"
export CASE_SENSITIVE
export HYPHEN_INSENSITIVE
export DISABLE_AUTO_UPDATE
export DISABLE_UPDATE_PROMPT
export UPDATE_ZSH_DAYS
export DISABLE_MAGIC_FUNCTIONS
export DISABLE_LS_COLORS
export DISABLE_AUTO_TITLE
export ENABLE_CORRECTION
export COMPLETION_WAITING_DOTS
export DISABLE_UNTRACKED_FILES_DIRTY
export HIST_STAMPS

# --- SYNTAX ---
typeset -A ZSH_HIGHLIGHT_STYLES
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)
ZSH_HIGHLIGHT_STYLES[alias]='fg=cyan,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-1]='fg=blue,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-2]='fg=red,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-3]='fg=yellow,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-4]='fg=magenta,bold'
ZSH_HIGHLIGHT_STYLES[cursor]='bg=pink'
ZSH_HIGHLIGHT_STYLES[path]='fg=magenta'
ZSH_HIGHLIGHT_STYLES[root]='bg=red'
export ZSH_HIGHLIGHT_HIGHLIGHTERS
export ZSH_HIGHLIGHT_STYLES

# --- ZSTYLE ---
zstyle :compinstall filename "$ZSHRC"
zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
zstyle ':completion:*:killall:*'   force-list always
zstyle ':completion:*:*:killall:*' menu yes select
zstyle ':completion:*:kill:*'   force-list always
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'

# --- TERMINAL DEFAULTS ---
setopt autocd
setopt correctall
unsetopt BEEP
umask 077
eval "$(dircolors "$HOME/.dir_colors")"
autoload -U promptinit && promptinit  # command prompt
autoload -Uz compinit && compinit  # advanced tab-completion

# -- RUNTIME ---
source "$THEMES"
source "$PLUGINS"
# source "$FUNCTIONS"
source "$FUNCTIONS_TMP"
source "$ALIASES"

# --- ENSURE FUNCTIONS ---
VISUAL=vim
EDITOR="$VISUAL"
export VISUAL
export EDITOR

# --- CONDITIONAL ---
[[ -d "$TRAVIS"  ]] && source "$TRAVIS"

# --- LOAD SETTINGS ---
source "$ZSH/oh-my-zsh.sh"

# added by travis gem
DOT_TRAVIS="$HOME/.travis"
[ ! -s "$DOT_TRAVIS/travis.sh" ] || source "$DOT_TRAVIS/travis.sh"
alias pmk="pymake"
alias qckcmt="git add .; git commit -m quickcommit; git push"

write_fixture () {
    file="$1"; name="$2";
    echo "@pytest.fixture(name=\"$name\")"           >> "$file"
    echo "def fixture_$name():"                     >> "$file"
    echo "    # function template yet to be filled" >> "$file"
    echo "    pass"                                 >> "$file"
    echo                                            >> "$file"
}
alias pe=pipenv
alias pymake="pyaud"
alias fullapt="fullapt -l 4"
source /etc/zsh_command_not_found


act () {
  logdir="${HOME}/.cache/act/log"
  archive="${logdir}/$(date +'%Y%m%d')"
  if [ ! -d "$archive" ]; then
    mkdir -p "$archive"
  fi
  _act="/usr/local/bin/act"
  basename="$(
      python -c \
          "import subprocess; \
          output = subprocess.check_output( \
                ['act', '--list'] \
          ).decode('utf-8').split(); \
          print(output[-1])"
  )"
  _a_file="${archive}/${basename}-$(date +'%H%M%S').log"
  logfile="${logdir}/${basename}.log"
  echo >> "$logfile"
  unbuffer \
      "$_act" "$@" 2>&1 |\
      tee "$logfile"

  cp "$logfile" "$_a_file"
}
alias python="python3"
